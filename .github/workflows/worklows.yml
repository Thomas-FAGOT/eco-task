name: Lint and Run Tests on Push

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: eco-task-backend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./eco-task-backend
        run: npm install

      - name: 🎨 Run Prettier (optional)
        working-directory: ./eco-task-backend
        run: npm run prettier:check || echo "⚠️ Prettier found issues. Run 'npm run prettier:fix' locally."

      - name: 🔍 Run ESLint
        working-directory: ./eco-task-backend
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint # Cette étape dépend de l'étape lint pour s'assurer qu'elle est exécutée avant.
    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: eco-task-backend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./eco-task-backend
        run: npm install

      - name: 📄 Create test environment file
        working-directory: ./eco-task-backend
        run: |
          cp .env.example .env.test
          sed -i 's/^APP_KEY=.*/APP_KEY=WPcsQJt-IXdhgwTjmCOTPuuTNDcTtFB0/' .env.test
          sed -i 's/^NODE_ENV=.*/NODE_ENV=test/' .env.test
      
      - name: ✅ Verify .env.test file exists
        working-directory: ./eco-task-backend
        run: |
          if [ ! -f .env.test ]; then
            echo "❌ .env.test file is missing!"
            exit 1
          fi
          cat .env.test

      - name: 🧪 Run tests
        working-directory: ./eco-task-backend
        run: |
          export $(cat .env.test | xargs)
          npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test # Ne se lance que si les tests passent
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      - name: 🔑 Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 92.112.192.183 >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to Server
        run: |
          ssh root@92.112.192.183 << 'EOF'
          cd /ynov/thomas/eco-task
          git pull origin main
          docker compose up -d --build

      - name: 🧹 Cleanup SSH Key
        run: rm -f ~/.ssh/id_rsa
